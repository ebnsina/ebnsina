const howToManageMultipleGitAccountsOnMacos = "---\ntitle: How to Manage Multiple Git Accounts (GitHub & Bitbucket) on macOS\ndate: '2025-08-01'\ntags: ['git', 'github', 'bitbucket', 'ssh', 'macos']\nexcerpt: Learn how to configure and manage multiple Git accounts (personal and work) on your M1 Mac using SSH keys and Git configuration.\n---\n\nManaging multiple Git accounts (e.g., one for personal GitHub and another for work Bitbucket or GitHub) can be challenging without proper configuration. This guide will show you how to set up and manage multiple Git accounts cleanly on macOS (M1) using SSH keys and Git configuration to avoid authentication conflicts.\n\n---\n\n## Generate SSH Keys for Each Account\n\n```sh\n# For personal GitHub\nssh-keygen -t ed25519 -C \"your_personal_email@example.com\" -f ~/.ssh/id_ed25519_github\n\n# For work Bitbucket\nssh-keygen -t ed25519 -C \"your_work_email@example.com\" -f ~/.ssh/id_ed25519_bitbucket\n```\n\nThis creates two key pairs:\n\n```sh\n~/.ssh/id_ed25519_github (personal)\n\n~/.ssh/id_ed25519_bitbucket (work)\n```\n\n## Add Public Keys to Your Git Accounts\n\n### GitHub (Personal)\n1. Go to GitHub → Settings → SSH and GPG keys\n2. Add contents of:\n```sh\ncat ~/.ssh/id_ed25519_github.pub\n```\n\n### Bitbucket (Work)\n1. Go to Bitbucket → Personal Settings → SSH Keys\n2. Add contents of:\n\nAdd contents of:\n\n```sh\ncat ~/.ssh/id_ed25519_bitbucket.pub\n\n## Configure SSH Config File\n\nEdit or create `~/.ssh/config` and add:\n```\n\n```sh\n# Personal GitHub\nHost github.com\n  HostName github.com\n  User git\n  IdentityFile ~/.ssh/id_ed25519_github\n  IdentitiesOnly yes\n\n# Work Bitbucket\nHost bitbucket.org\n  HostName bitbucket.org\n  User git\n  IdentityFile ~/.ssh/id_ed25519_bitbucket\n  IdentitiesOnly yes\n```\n\nTip: This allows Git to auto-select the right key depending on the remote host.\n\n## Test Your Setup\n\n```sh\n# Test GitHub (personal)\nssh -T git@github.com\n\n# Test Bitbucket (work)\nssh -T git@bitbucket.org\nIf it works, you’ll see a success message like:\n\nHi your_username! You've successfully authenticated...\n```\n\n## Git Config Setup\nFirst, set your global config to personal (default):\n```sh\ngit config --global user.name \"Your Personal Name\"\ngit config --global user.email \"your_personal_email@example.com\"\n```\n\nThen, for work repositories, override the config locally:\nNavigate to your work repository and run:\n\n```sh\ngit config user.name \"Your Work Name\"\ngit config user.email \"your_work_email@company.com\"\n```\n\nThis affects only that repo and avoids identity leaks.\n\n## Updating Existing Repositories (Optional)\nIf your remote URLs are using HTTPS, you'll need to change them to SSH:\n\n### For Bitbucket repositories:\n```sh\ngit remote set-url origin git@bitbucket.org:company/repo.git\n```\n\n### For GitHub repositories:\n```sh\ngit remote set-url origin git@github.com:username/repo.git\n```\n\n## Bonus: Verify Active Identity Per Repo\nRun this inside a repo:\n\n```sh\ngit config user.name\ngit config user.email\n```";
export {
  howToManageMultipleGitAccountsOnMacos as default
};
